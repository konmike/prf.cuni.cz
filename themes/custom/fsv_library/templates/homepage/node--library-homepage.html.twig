{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}

{% extends 'node.html.twig' %}

{% block content %}



   <style>

        .tab button.active {
            background-color: #bb133e!important;
            color: white;
        }

        .tabcontent {
            animation: fadeEffect 1s; /* Fading effect takes 1 second */
        }

        .tab { overflow: hidden; border: 1px solid #f6f6f6; }

        /* Style the buttons inside the tab */
        .tab button { background-color: inherit; float: left; border: none; outline: none; cursor: pointer; padding: 14px 16px; transition: 0.3s; }

        /* Change background color of buttons on hover */
        .tab button:hover { background-color: #ddd; }

        /* Create an active/current tablink class */
        .tab button.active { background-color: #ccc; }
        .tabframe { background: white }

        /* Style the tab content */
        .tabcontent { display: none; border: 1px solid #f6f6f6; border-top: none; word-break: break-word;    margin-top: 0;
    margin-bottom: 40px; }
        .tabcontent p { white-space: pre-line; }

        /* Go from zero to full opacity */
        @keyframes fadeEffect {
            from {opacity: 0;}
            to {opacity: 1;}
        }

    </style>
 
<div class="tab lib-search">
  <button class="tablinks active" onclick="openCity(event, 'ukaz')">{{ 'Discovery Service UK-AÅ½'|t }}</button>
  <button class="tablinks" onclick="openCity(event, 'katalog')">{{ 'Catalogue FSV UK'|t }}</button>
</div>

<div id="ukaz" class="tabcontent lib-search mb" style="display: block;">
  
<!-- EBSCOhost Custom Search Box Begins -->
    <script src="https://support.ebscohost.com/eit/scripts/ebscohostsearch.js" type="text/javascript"></script>
    <form action="" onsubmit="return ebscoHostSearchGo(this);" method="post">
        <input id="ebscohostwindow" name="ebscohostwindow" type="hidden" value="1" />
        <input id="ebscohosturl" name="ebscohosturl" type="hidden" value="http://search.ebscohost.com/login.aspx?direct=true&scope=site&type=0&site=eds-live&custid=s1240919&groupid=fsv&profid=eds&lang={{ current_language }}&authtype=ip,guest" />
        <input id="ebscohostsearchsrc" name="ebscohostsearchsrc" type="hidden" value="db" />
        <input id="ebscohostsearchmode" name="ebscohostsearchmode" type="hidden" value="+" />
        <input id="ebscohostkeywords" name="ebscohostkeywords" type="hidden" value="" />

        <div class=" lib-search__wrap">
            <div class="lib-search__logo-wrap">
                <img class="lib-search__logo" src="{{ theme_path }}/images/search-library.png" alt="">
            </div>
            <div class="lib-search__input-wrap">
                <label class="lib-search__label" for="ebscohostsearchtext">{{ 'Search across catalogues, databases and e-sources'|t }}</label>
                <input class="lib-search__input" placeholder="{{'Search for books, magazines, articles, studies...'|t}}" type="search" id="ebscohostsearchtext" name="ebscohostsearchtext" size="30" maxlength="255">
            </div>
            <input class="lib-search__submit" type="submit" value="Search" >
        </div>



        <div class="hidden" id="guidedFieldSelectors">
            <input class="radio" type="radio" name="searchFieldSelector" id="guidedField_0" value="" checked="checked" />
            <label class="label" for="guidedField_0"> Keyword</label>
            <input class="radio" type="radio" name="searchFieldSelector" id="guidedField_1" value="TI" />
            <label class="label" for="guidedField_1"> Title</label>
            <input class="radio" type="radio" name="searchFieldSelector" id="guidedField_2" value="AU" />
            <label class="label" for="guidedField_2"> Author</label>
        </div>

        <div class="hidden" id="limiterblock">
            <div id="limitertitle">Limit Your Results</div>
            
            <div class="limiter">
                <input type="checkbox" id="chkFullText" name="chkFullText"  />
                <label for="chkFullText">Full Text</label>
            </div>
            
            <div class="limiter">
                <input type="checkbox" id="chkLibraryCollection" name="chkLibraryCollection"  />
                <label for="chkLibraryCollection">Available in Library Collection</label>
            </div>
            
            <div class="limiter">
                <input type="checkbox" id="chkPeerReviewed" name="chkPeerReviewed"  />
                <label for="chkPeerReviewed">Peer Reviewed</label>
            </div>
            
            <div class="limiter">
                <input type="checkbox" id="chkCatalogOnly" name="chkCatalogOnly"  />
                <label for="chkCatalogOnly">Catalog Only</label>
            </div>
            
            <div class="limiter">
                <input type="checkbox" id="chkIROnly" name="chkIROnly"  />
                <label for="chkIROnly">Institutional Repository Only</label>
            </div>
        </div>
    
    </form>
    <!-- EBSCOhost Custom Search Box Ends -->


</div>  <!-- tab content end -->
 
<div id="katalog" class="tabcontent lib-search mb">


    <form action="https://ckis.cuni.cz/F/" method="get" target="_blank">
  		<input name="local_base" value="fsv" type="hidden">
    	<input name="func" value="find-e" type="hidden">

        <div class=" lib-search__wrap">
            <div class="lib-search__logo-wrap">
                <img class="lib-search__logo" src="https://www.natur.cuni.cz/fakulta/aktuality/archiv-2017/uk-logo.png-16" alt="">
            </div>
            <div class="lib-search__input-wrap">
                <label class="lib-search__label" for="ebscohostsearchtext">{{ 'SEARCH ONLY IN FSV CATALOGUE'|t }}</label>
                <input class="lib-search__input" placeholder="{{ 'Search printed book and journals'|t }}" type="search" id="ebscohostsearchtext" name="request" size="30" maxlength="255">
            </div>
            <input class="lib-search__submit" type="submit" value="Search" >
        </div>

    
    </form>

</div>

<script>
document.getElementById("ukaz").click();

function openCity(evt, cityName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}
</script>
 
   

{{ drupal_view('news_page', 'block_homepage_news_feed') }}

    {{ content['field_homepage_contacts'] }}



    <div class="thirds-row mb">
        <div class="two-thirds">
            {{ content['field_homepage_circle_links'] }}
        </div>
        <div class="one-third">
            {{ drupal_view('new_books', 'homepage_new_books') }}
        </div>
    </div>

    

{% endblock %}

