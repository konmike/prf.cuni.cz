{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
	set section_classes = [
    'section',
    'padding',
    'paragraph',
		'paragraph--socialni-site',
		'pt-' ~ content.field_horni_odsazeni[0]|render,
		'pb-' ~ content.field_spodni_odsazeni[0]|render,
    ('1' in content.field_section_delimiter[0]) ? 'border-top',
	]
%}

{% set custom_title_classes = create_attribute() %}

{%
	set title_classes = [
    'section-title',
    ('1' in content.field_kapitalky[0] or content.field_kapitalky[0] is empty) ? 'text-uppercase',
    ('1' in content.field_tucne[0]) ? 'font-bold',
    ('1' in content.field_zmensit[0] or content.field_zmensit[0] is empty) ? 'font-calibri-smaller',
		('1' in content.field_oddelit_tenkou_linkou[0] or content.field_oddelit_tenkou_linkou[0] is empty) ? 'border-bottom',
	]
%}

{%
	set title_text_clr = [
    content.field_barva_nadpisu[0]|render,
	]
%}

{% block paragraph %}
  <div {{ attributes.addClass(section_classes) }}> 
    {% block content %}
        {{ content.field_header }}

        {% if not (content.field_wysiwyg_body[0] is empty) %}
            {{ content.field_wysiwyg_body }}
        {% endif %}

        <ul class="social-media">
          {% for key, item in content.field_socialni_site if key|first != '#' %}
            {% if 'instagram' in item['#plain_text'] %}
              {% set file = 'social-ig.svg' %}
            {% endif %}

            {% if 'facebook' in item['#plain_text'] %}
              {% set file = 'social-fb.svg' %}
            {% endif %}

            {% if 'twitter' in item['#plain_text'] %}
              {% set file = 'social-x-black.svg' %}
            {% endif %}

            {% if 'linkedin' in item['#plain_text'] %}
              {% set file = 'social-lin.svg' %}
            {% endif %}

            {% if 'youtube' in item['#plain_text'] %}
              {% set file = 'social-yt.svg' %}
            {% endif %}

            <li>
              <a href="{{ item }}">
                <img 
                  class="img img--social-icon" 
                  alt="{{ item }}" 
                  src="/sites/default/files/uploads/images/{{ file }}"
                />
              </a>
            </li>
          {% endfor %}
        </ul>

    {% endblock %}
  </div>
{% endblock paragraph %}
