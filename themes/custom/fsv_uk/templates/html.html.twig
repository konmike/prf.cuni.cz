{#
/**
 * @file
 * Theme override for the basic structure of a single Drupal page.
 *
 * Variables:
 * - logged_in: A flag indicating if user is logged in.
 * - root_path: The root path of the current page (e.g., node, admin, user).
 * - node_type: The content type for the current node, if the page is a node.
 * - head_title: List of text elements that make up the head_title variable.
 *   May contain one or more of the following:
 *   - title: The title of the page.
 *   - name: The name of the site.
 *   - slogan: The slogan of the site.
 * - page_top: Initial rendered markup. This should be printed before 'page'.
 * - page: The rendered page markup.
 * - page_bottom: Closing rendered markup. This variable should be printed after
 *   'page'.
 * - db_offline: A flag indicating if the database is offline.
 * - placeholder_token: The token for generating head, css, js and js-bottom
 *   placeholders.
 *
 * @see template_preprocess_html()
 */
#}
<!DOCTYPE html>
<html{{ html_attributes }}>
  <head>
    <head-placeholder token="{{ placeholder_token }}">
    <title>{{ head_title|safe_join(' | ') }}</title>
    <css-placeholder token="{{ placeholder_token|raw }}">
    <js-placeholder token="{{ placeholder_token|raw }}">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600&amp;subset=latin-ext" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&display=swap" rel="stylesheet">

    {# og image #}
    <meta property="og:image" content="{{ host_scheme ~ file_url(theme_path ~ "/favicons/logo-500x350.png") }}" />
    <meta property="og:image:type" content="image/png">
    <meta property="og:image:width" content="500">
    <meta property="og:image:height" content="350">

    {# favicons #}
    <link rel="apple-touch-icon" sizes="180x180" href="{{ theme_path }}/favicons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ theme_path }}/favicons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ theme_path }}/favicons/favicon-16x16.png">
    <link rel="manifest" href="{{ theme_path }}/favicons/manifest.json">
    <link rel="mask-icon" href="{{ theme_path }}/favicons/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="{{ theme_path }}/favicons/favicon.ico">
    <meta name="msapplication-config" content="{{ theme_path }}/favicons/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <meta name="zoom-domain-verification" content="ZOOM_verify_5y8iNkLoTSmE_gF0Rms3qg">

  </head>
  <body{{ attributes }}>
    {#
      Keyboard navigation/accessibility link to main content section in
      page.html.twig.
    #}
    <a href="#main-content" class="show-on-focus">
        {{ 'Přejít na hlavní obsah'|t }}
    </a>

    {{ page_top }}
    {{ page }}
    {{ page_bottom }}
    <js-bottom-placeholder token="{{ placeholder_token|raw }}">

    <script>
      function checkCookieConsent() {
        let consentGiven = false;
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            let cookie = cookies[i].trim();
            if (cookie.indexOf('cookieConsentStatus=') === 0) {
                let cookieValue = cookie.substring('cookieConsentStatus='.length, cookie.length);
                if (cookieValue !== '2') {
                    return false;
                }
            }
            if (cookie.indexOf('cookieCategorie=') == 0) {
                let cookieCategoryValue = decodeURIComponent(cookie.substring('cookieCategorie='.length, cookie.length));
                if (cookieCategoryValue.indexOf('vykonnostni_a_analyticke_cookies') !== -1) {
                    consentGiven = true;
                } else {
                    consentGiven = false;
                }
            }
        }
        return consentGiven;
      }

      function loadGoogleAnalytics() {
        const gtagScript = document.createElement('script');
        gtagScript.async = true;
        gtagScript.src = 'https://www.googletagmanager.com/gtag/js?id=UA-38205799-1';
        document.head.appendChild(gtagScript);

        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'UA-38205799-1');
      }
      
      function attachEventListeners() {
        const buttons = document.querySelectorAll('.eu-cookie-compliance-save-preferences-button, .eu-cookie-compliance-buttons > .agree-button');
        for (const button of buttons) {
          button.addEventListener('click', function() {
            if (checkCookieConsent()) {
              loadGoogleAnalytics();
            }
          });
        }
      }

      function mutationCallback(mutationsList, observer) {
        for(const mutation of mutationsList) {
          if (mutation.type === 'childList' && mutation.addedNodes.length) {
            for(const node of mutation.addedNodes) {
              if (node.nodeType === 1) {
                if (node.matches('.eu-cookie-compliance-save-preferences-button, .eu-cookie-compliance-buttons > .agree-button') 
                    || node.querySelector('.eu-cookie-compliance-save-preferences-button, .eu-cookie-compliance-buttons > .agree-button')) {
                  attachEventListeners();
                  observer.disconnect();
                  break;
                }
              }
            }
          }
        }
      }

      const observer = new MutationObserver(mutationCallback);
      observer.observe(document.body, { childList: true, subtree: true });

      attachEventListeners();
    </script>
  </body>
</html>
